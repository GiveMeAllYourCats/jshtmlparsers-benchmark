"use strict";
/*!
 *
 * Copyright 2017 - acrazing
 *
 * @author acrazing joking.young@gmail.com
 * @since 2017-08-20 21:41:39
 * @version 1.0.0
 * @desc utils.ts
 */
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var tokenize_1 = require("./tokenize");
function inspectToken(input) {
    var e_1, _a;
    var tokens = tokenize_1.tokenize(input);
    var output = '';
    var upper = '';
    var down = '';
    var max = 120;
    var pos;
    var value;
    var width;
    try {
        for (var tokens_1 = tslib_1.__values(tokens), tokens_1_1 = tokens_1.next(); !tokens_1_1.done; tokens_1_1 = tokens_1.next()) {
            var token = tokens_1_1.value;
            pos = token.start.toString();
            value = JSON.stringify(token.value);
            value = value.substr(1, value.length - 2);
            width = Math.max(pos.length, value.length) + 1;
            upper += value.padEnd(width, ' ') + '|';
            down += pos.padEnd(width, ' ') + '|';
            if (upper.length > max) {
                output += upper + "\n" + down + "\n\n";
                upper = '';
                down = '';
            }
        }
    }
    catch (e_1_1) { e_1 = { error: e_1_1 }; }
    finally {
        try {
            if (tokens_1_1 && !tokens_1_1.done && (_a = tokens_1.return)) _a.call(tokens_1);
        }
        finally { if (e_1) throw e_1.error; }
    }
    if (upper.length > 0) {
        output += upper + "\n" + down + "\n";
    }
    return output;
}
exports.inspectToken = inspectToken;
function getLineRanges(input) {
    return input.split('\n').reduce(function (arr, line) {
        arr.push(line.length + 1 + arr[arr.length - 1]);
        return arr;
    }, [0]);
}
exports.getLineRanges = getLineRanges;
function getPosition(ranges, offset) {
    var line = NaN;
    var column = NaN;
    for (var i = 1; i < ranges.length; i++) {
        if (ranges[i] > offset) {
            line = i;
            column = offset - ranges[i - 1] + 1;
            break;
        }
    }
    return [line, column];
}
exports.getPosition = getPosition;
//# sourceMappingURL=utils.js.map